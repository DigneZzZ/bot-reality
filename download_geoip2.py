#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö GeoLite2 City –æ—Ç MaxMind.
–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è GeoIP2 —Ñ—É–Ω–∫—Ü–∏–π –≤ –±–æ—Ç–µ.
"""

import os
import requests
import tarfile
import tempfile
from pathlib import Path

def download_geolite2_city(target_dir=None):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö GeoLite2 City.
    
    –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –° –¥–µ–∫–∞–±—Ä—è 2019 –≥–æ–¥–∞ MaxMind —Ç—Ä–µ–±—É–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ 
    –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ GeoLite2 –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö.
    
    –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã:
    1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ https://dev.maxmind.com/geoip/geolite2-free-geolocation-data
    2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–µ –≤–µ—Ä—Å–∏–∏ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤
    3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
    """
    
    if not target_dir:
        target_dir = os.getenv("LOG_DIR", "/tmp")
    
    target_path = Path(target_dir)
    target_path.mkdir(exist_ok=True)
    
    print("üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—É–∑–∫–µ GeoLite2 City:")
    print("üîó MaxMind —Ç—Ä–µ–±—É–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ GeoLite2 –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö")
    print("üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞: https://dev.maxmind.com/geoip/geolite2-free-geolocation-data")
    print("üíæ –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ GeoLite2 City –≤ —Ñ–æ—Ä–º–∞—Ç–µ .mmdb")
    print(f"üìÅ –ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª –≤: {target_path / 'GeoLite2-City.mmdb'}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
    alternative_urls = [
        "https://github.com/P3TERX/GeoLite.mmdb/raw/download/GeoLite2-City.mmdb",
        "https://raw.githubusercontent.com/Dreamacro/maxmind-geoip/release/Country.mmdb"
    ]
    
    print("üîÑ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...")
    
    for i, url in enumerate(alternative_urls, 1):
        try:
            print(f"üì• –ü–æ–ø—ã—Ç–∫–∞ {i}: {url}")
            response = requests.get(url, timeout=30, stream=True)
            
            if response.status_code == 200:
                filename = "GeoLite2-City.mmdb" if i == 1 else f"GeoLite2-Alternative-{i}.mmdb"
                filepath = target_path / filename
                
                with open(filepath, 'wb') as f:
                    for chunk in response.iter_content(chunk_size=8192):
                        if chunk:
                            f.write(chunk)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
                file_size = filepath.stat().st_size
                if file_size > 1024 * 1024:  # –ë–æ–ª—å—à–µ 1MB
                    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {filepath} ({file_size / (1024*1024):.1f} MB)")
                    print(f"üîß –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é: GEOIP2_DB_PATH={filepath}")
                    return str(filepath)
                else:
                    print(f"‚ö†Ô∏è –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –º–∞–ª ({file_size} bytes), –≤–æ–∑–º–æ–∂–Ω–æ –æ—à–∏–±–∫–∞")
                    filepath.unlink()
            else:
                print(f"‚ùå HTTP {response.status_code}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print()
    print("üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏:")
    print("1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ https://www.maxmind.com/en/accounts/current/geoip/downloads")
    print("2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ GeoLite2 City (Binary / gzip)")
    print("3. –†–∞—Å–ø–∞–∫—É–π—Ç–µ –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ .mmdb —Ñ–∞–π–ª –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞")
    print(f"4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GEOIP2_DB_PATH={target_path / 'GeoLite2-City.mmdb'}")
    
    return None

if __name__ == "__main__":
    import sys
    
    target = sys.argv[1] if len(sys.argv) > 1 else None
    result = download_geolite2_city(target)
    
    if result:
        print(f"\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é: {result}")
    else:
        print("\n‚ùå –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä—É—á–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É.")
